#!/bin/bash
cd "$(git rev-parse --show-toplevel)"

# format & run marp for slides
if git diff --cached --name-only --diff-filter=ACM | grep -q "slides/slides.md"; then
    prettier slides/slides.md -w
    marp -c .githooks/marp.config.js slides/slides.md -o slides/slides.pdf --allow-local-files
    archive_for_current_branch="slides/archive/slides-$(git branch --show-current).pdf"
    if [ -f "$archive_for_current_branch" ]; then
        echo ":: $archive_for_current_branch exists. Overwriting with updated slides."
    else
        echo ":: Making new archive: $archive_for_current_branch"
    fi
    cp -f slides/slides.pdf "slides/archive/slides-$(git branch --show-current).pdf"
    git add slides/slides.md slides/slides.pdf "slides/archive/slides-$(git branch --show-current).pdf"
fi

# format README
if git diff --cached --name-only --diff-filter=ACM | grep -q "README.md"; then
    prettier README.md -w
    git add README.md
fi

# format python files
if git diff --cached --name-only --diff-filter=ACM | grep -q '\.py$'; then
    source .venv/bin/activate
    file_name=$(git diff --cached --name-only | grep '\.py$')
    git diff --cached --name-only | grep '\.py$' | xargs black -q
    echo "$file_name reformatted with black."
    git add $file_name
fi
